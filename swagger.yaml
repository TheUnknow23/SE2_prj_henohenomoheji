swagger: '2.0'
info:
  version: 0.0.1
  title: Henohenoapi
  description: >-
    The project aims to create a platform for managing exams, teachers can
    public exams(which have a deadline) and add tasks to them, while students
    can submit their answers and answer.
#dominio e baseroot
host: henoheno-app.herokuapp.com
basePath: /
#portocollo supportato
schemes:
  - http
#formati dati accettabile da server
consumes:
  - application/json
#formati dati prodotto da server
produces:
  - application/json
tags:
  - name: Users_resource
    description: Operations regarding the users
  - name: Exams_resource
    description: Operations regarding the exam
  - name: Tasks_resource
    description: Operations regarding the tasks
  - name: Exam_submissions_resource
    description: Operations regarding the answer
  - name: Groups_resource
    description: Operations regarding the students
  - name: Exam_peer_reviews_resource
    description: Operations regarding the reviews

#sicurezza defualt per tutte le operazioni
security:
  - Api_key_student: []     #apikey di studente
  - Api_key_teacher: []     #apikey di insegnante



#parte di url--------------------------------------------------------------------------
paths:
  /auth:
    post:
      summary: user authentication
      description: user makes authentication
      tags:
        - Users_resource
      parameters:
        - $ref: '#/parameters/User_email_password_in_body'
      security:
              - {} #non usare nessun api-key
      responses:
        '201':
                description: return a user 's token
                schema:
                        type: string
                        description: a valid token               
                
        '500':
                $ref: '#/responses/500_internal_server_error'               
                        
          
  /users:
    get:
      summary: users list
      description: get a users list
      tags:
                - Users_resource
      security:
                - Api_key_teacher: [] #solo insegnante pu√≤ vedere
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Users_in_response'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    post:
      summary: user subscription
      description: create a new user
      tags:
        - Users_resource
      security:
              - {} #non usare nessun api-key
      parameters:
        - $ref: '#/parameters/User_in_post'
      responses:
        '201':
                description: Created
                schema:
                        type: integer
                        description: the new user 's id
                        
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '401':
                $ref: '#/responses/401_unauthorized'
        '500':
                $ref: '#/responses/500_internal_server_error'
                
  '/users/{user_id}':
    get:
      summary: access one specific user
      description: access one specific user
      tags:
        - Users_resource
      parameters:
        - $ref: '#/parameters/User_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User_in_response'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
  '/users/{user_id}/exams':
    get:
      summary: get the exams assigned to a student
      description: get the exams assigned to a student
      tags:
        - Users_resource
      
      parameters:
        - $ref: '#/parameters/User_id_in_path'
      responses:
                '200':
                        description: OK
                        schema:
                              $ref: '#/definitions/Exams'  
                '401':
                        $ref: '#/responses/401_unauthorized'
                '404':
                        $ref: '#/responses/404_not_found'
                '500':
                        $ref: '#/responses/500_internal_server_error'
        
  '/users/{user_id}/exam_submissions':
    get:
      summary: get the submissions of a student
      description: get the submissions of a student
      tags:
        - Users_resource
      security:
        - Api_key_teacher: []  #solo insegnante
      parameters:
        - $ref: '#/parameters/User_id_in_path'
      responses:
                '200':
                        description: OK
                        schema:
                              $ref: '#/definitions/Exam_submissions' 
                '401':
                        $ref: '#/responses/401_unauthorized'
                '404':
                        $ref: '#/responses/404_not_found'
                '500':
                        $ref: '#/responses/500_internal_server_error'
          
  /exams:
    get:
      summary: exams list
      description: 
        Teachers get the list of created exams, while students the list of assigned exams(the tasks solutions will be empty in this case)
      tags:
        - Exams_resource
      responses:
        '200':
          description: OK
          schema:
              $ref: '#/definitions/Exams'
          
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

    post:
      summary: create an exam by defining a set of tasks and other stuff
      description: create an exam by defining a set of tasks and other stuff
      tags:
        - Exams_resource
      security:
        - Api_key_teacher: []  #solo insegnante 
      parameters:
        - $ref: '#/parameters/Exam_in_post'
      responses:
        '201':
                description: Created
                schema:
                        type: integer
                        description: the new exam's id
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '401':
                $ref: '#/responses/401_unauthorized'
        '500':
                $ref: '#/responses/500_internal_server_error'
                
  '/exams/{exam_id}':
    get:
      summary: access one specific exam
      description: access one specific exam and its tasks
      tags:
        - Exams_resource
      parameters:
        - $ref: '#/parameters/Exam_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Exam'
          
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

    put:
      summary: update an exam by adding groups or changing specific fields
      description: update an exam by adding groups or changing specific fields
      tags:
        - Exams_resource
      security:
        - Api_key_teacher: []  #solo insegnante
      parameters:
        - $ref: '#/parameters/Exam_id_in_path'
        - $ref: '#/parameters/Exam_in_put'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '409':
                $ref: '#/responses/409_conflict'
        '500':
                $ref: '#/responses/500_internal_server_error'
                
  '/exams/{exam_id}/exam_submissions':
    get:
      summary: access the answer of a specific exam
      description: get a exam submission list of a specific exam
      tags:
        - Exams_resource
      security:
        - Api_key_teacher: []  #solo insegnante
      parameters:
        - $ref: '#/parameters/Exam_id_in_path'
      responses:
        '200':
                description: OK
                schema:
                        $ref: '#/definitions/Exam_submissions' 
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
  '/exams/{exam_id}/exam_peer_reviews':
    get:
      summary: access the reviews of a specific exam
      description: get the list of reviews of an exam
      tags:
        - Exams_resource
      security:
        - Api_key_teacher: []  #solo insegnante
      parameters:
        - $ref: '#/parameters/Exam_id_in_path'
      responses:
        '200':
                description: OK
                schema:
                        $ref: '#/definitions/Exam_peer_reviews' 
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
          
  /tasks:
    get:
      summary: tasks list
      description: As a teacher you get the list of created tasks and as a student you get the list of tasks assigned to you(without solutions)
      tags:
        - Tasks_resource
      responses:
        '200':
          description: OK
          schema:
             $ref: '#/definitions/Tasks'
          
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    post:
      summary: create new task
      description: create new task
      tags:
        - Tasks_resource
      security:
        - Api_key_teacher: []  #solo insegnante pu√≤ creare
      parameters:
        - $ref: '#/parameters/Task_in_post'
      responses:
        '201':
                description: Created
                schema:
                        type: integer
                        description: the new task's id
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '401':
                $ref: '#/responses/401_unauthorized'
        '500':
                $ref: '#/responses/500_internal_server_error'
                
  '/tasks/{task_id}':
    get:
      summary: access one specific task
      description: access one specific task(as a student you won't see the solutions)
      tags:
        - Tasks_resource
      parameters:
        - $ref: '#/parameters/Task_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
          
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    put:
      summary: update an existing task
      description: update an existing task
      tags:
        - Tasks_resource
      security:
        - Api_key_teacher: []  #solo insegnante pu√≤ creare

      parameters:
        - $ref: '#/parameters/Task_id_in_path'
        - $ref: '#/parameters/Task_in_put'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '409':
                $ref: '#/responses/409_conflict'
        '500':
                $ref: '#/responses/500_internal_server_error'
                
    delete:
      summary: delete an existing task
      description: delete an existing task
      tags:
        - Tasks_resource
      security:
        - Api_key_teacher: []  #solo insegnante pu√≤ creare
      parameters:
        - $ref: '#/parameters/Task_id_in_path'
      responses:
        '204':
                $ref: '#/responses/204_no_content'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '405':
                $ref: '#/responses/405_method_not_allowed'
        '500':
                $ref: '#/responses/500_internal_server_error'
          
  /exam_submissions:
    get:
      summary: Exam submission list
      description: get the list of the submissions of your students or, if you're a student, get the list of all your submissions(tasks won't contain solutions)
      tags:
        - Exam_submissions_resource
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Exam_submissions'
          
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    post:
      summary: submit new answer
      description: submit new answer
      tags:
        - Exam_submissions_resource
      security:
         - Api_key_student: []     #solo lo studente
      parameters:
        - $ref: '#/parameters/Exam_submission_in_post'
         
      responses:
        '201':
                description: Created
                schema:
                        type: integer
                        description: the new exam submission's id
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '401':
                $ref: '#/responses/401_unauthorized'
        '500':
                $ref: '#/responses/500_internal_server_error'
  '/exam_submissions?toreview=true':
    get:
      summary: Exam submissions to review
      description: get the list of the submissions to review(task set won't contain solutions)
      tags:
        - Exam_submissions_resource
      security:
         - Api_key_student: []     #solo lo studente
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Exam_submissions'
          
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
  '/exam_submissions/{exam_submission_id}':  
    get:  
      summary: access a specific answer
      description: read the submission of a student and its evaluation(if present)
      tags:
        - Exam_submissions_resource
      parameters:
        - $ref: '#/parameters/Exam_submission_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Exam_submission'
          
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    put:
      summary: update an existing solution(or assign evaluation)
      description: As a student you might update your submission, or if you're a teacher you can set an evaluation for the submission
      tags:
        - Exam_submissions_resource
      parameters:
        - $ref: '#/parameters/Exam_submission_id_in_path'
        - $ref: '#/parameters/Exam_submission_in_put'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '409':
                $ref: '#/responses/409_conflict'
        '500':
                $ref: '#/responses/500_internal_server_error'
                

  '/exam_submissions/{exam_submission_id}/exam_peer_reviews':
    get:
      summary: access the reviews of a solution
      description: get all reviews of a specific submission(if it's a student he won't get the solutions)
      tags:
        - Exam_submissions_resource
      parameters:
        - $ref: '#/parameters/Exam_submission_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Exam_peer_reviews'
          
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

        
          
    post:
      summary: submit a review to an answer
      description: submit a review to an answer
      tags:
        - Exam_submissions_resource
      security:
         - Api_key_student: []     #solo lo studente
      parameters:
        - $ref: '#/parameters/Exam_submission_id_in_path'
        - $ref: '#/parameters/Exam_peer_review_in_post'
      responses:
        '201':
                description: Created
                schema:
                        type: integer
                        description: the new exam peer review's id
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '401':
                $ref: '#/responses/401_unauthorized'
        '500':
                $ref: '#/responses/500_internal_server_error'
                

          
  /groups:
    get:
      summary: groups list
      description: get the list of created groups or the list of groups you're in
      tags:
        - Groups_resource
      responses:
        '200':
          description: OK
          schema:
              $ref: '#/definitions/Groups'
                
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

        
          
    post:
      summary: create new group
      description: create new group
      tags:
        - Groups_resource
      security:
        - Api_key_teacher: []     #solo insegnante 
      parameters:
        - $ref: '#/parameters/Group_in_post'
      responses:
        '201':
                description: Created
                schema:
                        type: integer
                        description: the new group 's id
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '401':
                $ref: '#/responses/401_unauthorized'
        '500':
                $ref: '#/responses/500_internal_server_error'

  '/groups/{group_id}':
    get:
      summary: see the members of a group
      description: get a specific group
      tags:
        - Groups_resource
      parameters:
        - $ref: '#/parameters/Group_id_in_path'
      responses:
        '200':
          description: OK
          schema:
              $ref: '#/definitions/Groups'
              
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
    put:
      summary: update an existing group
      description: update an existing group
      tags:
        - Groups_resource
      security:
        - Api_key_teacher: []     #solo insegnante 
      parameters:
        - $ref: '#/parameters/Group_id_in_path'
        - $ref: '#/parameters/Group_in_put'        
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '409':
                $ref: '#/responses/409_conflict'
        '500':
                $ref: '#/responses/500_internal_server_error'
    delete:
      summary: delete an existing group
      description: delete an existing group
      tags:
        - Tasks_resource
      security:
        - Api_key_teacher: []  #solo insegnante pu√≤ creare
      parameters:
        - $ref: '#/parameters/Group_id_in_path'
      responses:
        '204':
                $ref: '#/responses/204_no_content'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '405':
                $ref: '#/responses/405_method_not_allowed'
        '500':
                $ref: '#/responses/500_internal_server_error'
    
  /exam_peer_reviews:
    get:
      summary: reviews list
      description: As a student you can get the list of all your reviews
      tags:
        - Exam_peer_reviews_resource
      security:
        - Api_key_student: []  #solo insegnante
      responses:
        '200':
          description: OK
          schema:
              $ref: '#/definitions/Exam_peer_reviews'
                
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

        
          
  '/exam_peer_reviews/{exam_peer_review_id}':
    get:
      summary: read a specific review
      description: read a specific review
      tags:
        - Exam_peer_reviews_resource
      parameters:
        - $ref: '#/parameters/Exam_peer_review_id_in_path'
      responses:
        '200':
          description: OK
          schema:
              $ref: '#/definitions/Exam_peer_review'
                
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
    put:
      summary: update a review
      description: update a review
      tags:
        - Exam_peer_review_resource
      security:
        - Api_key_student: []     #solo insegnante 
      parameters:
        - $ref: '#/parameters/Exam_peer_review_id_in_path'
        - $ref: '#/parameters/Exam_peer_review_in_put'        
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '409':
                $ref: '#/responses/409_conflict'
        '500':
                $ref: '#/responses/500_internal_server_error'
    delete:
      summary: delete an existing review
      description: delete an existing review
      tags:
        - Tasks_resource
      security:
        - Api_key_teacher: []  #solo insegnante pu√≤ creare
      parameters:
        - $ref: '#/parameters/Exam_peer_review_id_in_path'
      responses:
        '204':
                $ref: '#/responses/204_no_content'
        '401':
                $ref: '#/responses/401_unauthorized'
        '404':
                $ref: '#/responses/404_not_found'
        '405':
                $ref: '#/responses/405_method_not_allowed'
        '500':
                $ref: '#/responses/500_internal_server_error'
          
          
#parte di costante --------------------------------------------------------------------------
definitions:
  Error:
    properties:
      code:
        type: integer
      message:
        type: string
  
###oggetto user
  User:
    type: object   
    properties:
      user_id: #primary key
        type: integer
        description: the user 's id
      email:
        type: string
        description: the user 's email
      password:
        type: string
        format: password
        description: the user 's password
      name:
        type: string
        description: the user 's name
      surname:
        type: string
        description: the user 's surname
 
  Users:
        type: array
        items: 
                $ref: '#/definitions/User'
###oggetto exam
  Exam:
    type: object
    properties:
      exam_id:  #primary key
        type: integer 
      owner_id: #foreign key
        type: integer
      title:
        type: string
      description:
        type: string
      task_set:
        type: array
        items:
          $ref: '#/definitions/Task'
      group:
        $ref: '#/definitions/Group'
      final_deadline:
        type: string
        format: date
      reviews_deadline:
        type: string
        format: date

  Exams:
        type: array
        items: 
                $ref: '#/definitions/Exam'
  
###oggetto task
  Task:
    type: object
    properties:
      task_id: #primary key
        type: integer
      owner_id: #foreign key
        type: integer
      task_type:
        type: string
      subject:
        type: string
      title:
        type: string
      description:
        type: string
      options:
        type: array
        items: 
          type: string
      solutions:
        type: array
        items: 
          type: string

  Tasks:
        type: array
        items: 
                $ref: '#/definitions/Task'
###oggetto group
  Group:
    type: object
    properties:
      group_id: #primary key
        type: integer
      owner_id: #foreign key
        type: integer
      name:
        type: string
      description:
        type: string
      members:
        type: array
        items:
          $ref: '#/definitions/User_in_response'

  Groups:
        type: array
        items: 
                $ref: '#/definitions/Group'
###oggetto exam_submission
  Exam_submission:
    type: object
    properties:
      exam_submission_id: #primary key
        type: integer
      referred_exam: #'foreign' key
        $ref: '#/definitions/Exam'
      submitter_id: #foreign key
        type: integer
      answers:
        type: array
        items:
          type: object
          properties:
            task_id:
              type: integer
            answer:
              type: string
      status:
        type: string
      evaluation:
        type: string

  Exam_submissions:
          type: array
          items:
                  $ref: '#/definitions/Exam_submission'  
###oggetto exam_peer_review
  Exam_peer_review:
    type: object
    properties:
      exam_peer_review_id: #primary key
        type: integer
      reviewer_id: #foreign key
        type: integer 
      submitted_exam: #'foreign' key
        $ref: '#/definitions/Exam_submission'
      review:
        type: array
        items:
          type: string

  Exam_peer_reviews:
          type: array
          items:
                  $ref: '#/definitions/Exam_peer_review'  
###additional objects##
  User_in_response:
      type: object   
      properties:
        user_id: 
          type: integer
          description: the user 's id
        email:
          type: string
          description: the user 's email
        name:
          type: string
          description: the user 's name
        surname:
          type: string
          description: the user 's surname
  Users_in_response:
    type: array
    items:
      $ref: '#/definitions/User_in_response'
  User_for_post:
    type: object   
    properties:
      email:
        type: string
        description: the user 's email
      password:
        type: string
        format: password
        description: the user 's password
      name:
        type: string
        description: the user 's name
      surname:
        type: string
        description: the user 's surname
  Exam_for_post:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      tasks_ids:
        type: array
        items:
            type: integer
      group_id:
        type: integer
      final_deadline:
        type: string
        format: date
      reviews_deadline:
        type: string
        format: date
  Task_for_post:
    type: object
    properties:
      task_type:
        type: string
      subject:
        type: string
      title:
        type: string
      description:
        type: string
      options:
        type: array
        items: 
          type: string
      solutions:
        type: array
        items: 
          type: string
  Exam_submission_for_post:
    type: object
    properties:
      referred_exam_id: #'foreign' key
        type: integer
      answers:
        type: array
        items:
          type: object
          properties:
            task_id:
              type: integer
            answer:
              type: string
      status:
        type: string
  Exam_submission_for_put:
    type: object
    properties:
      answers:
        type: array
        items:
          type: object
          properties:
            task_id:
              type: integer
            answer:
              type: string
      status:
        type: string
      evaluation:
        type: string
  Exam_peer_review_for_post:
    type: object
    properties:
      review:
        type: array
        items:
          type: string
  Group_for_post:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      members_id:
        type: array
        items:
          type: integer
  Exam_peer_review_for_put:
    type: object
    properties:
      review:
        type: array
        items:
          type: string
###############not useful#######################################
  Exam_assessment:
    type: object
    properties:
      exam_assessment_id:
        type: integer
      assigner:
        $ref: '#/definitions/User'
      assignee:
        $ref: '#/definitions/User'
      referred_exam:
        $ref: '#/definitions/Exam'
      submitted_exam:
        $ref: '#/definitions/Exam_submission'
      assessment:
        type: string
        
  Exam_assessments:
          type: array
          items:
                  $ref: '#/definitions/Exam_assessment'  
  
################################################################


parameters:
        
  User_in_post:        
        name: user
        description: the object user
        in: body
        schema:
                $ref: '#/definitions/User_for_post'
                required:
                        - email
                        - password
                        - name
                        - surname

  User_email_password_in_body:  
        name: email_and_password
        description: the user s' email and password
        in: body
        schema:
                type: object
                properties:
                        email:
                                type: string
                                description: the user 's email
                        password:
                                type: string
                                format: password     
                                description: the user 's password
                required: 
                        - email
                        - password
           
        
  User_id_in_path:
    name: user_id
    description: the user's id
    in: path
    type: integer
    required: true
    
    
  Exam_in_post:        
        name: exam
        description: the object exam
        in: body
        schema:
                $ref: '#/definitions/Exam_for_post'
                required:
                        - title
                        - description
                        - task_set
                        - final_deadline
                        - reviews_deadline
 
  Exam_in_put:        
        name: exam
        description: the object exam
        in: body
        schema:
                $ref: '#/definitions/Exam_for_post'

    
  Exam_id_in_path:
    name: exam_id
    description: id esame
    in: path
    type: integer
    required: true
    
  Task_in_post:
        name: task
        description: the object task
        in: body
        schema:
                $ref: '#/definitions/Task_for_post'
                required:
                        - task_type
                        - subject
                        - title
                        - description
                        - options
                        - solutions
     
  Task_in_put:
        name: task
        description: the object task
        in: body
        schema:
                $ref: '#/definitions/Task_for_post'
                        
  Task_id_in_path:
    name: task_id
    description: id task
    in: path
    type: integer
    required: true
    
  Group_in_post:
        name: group
        description: the object group
        in: body
        schema:
                $ref: '#/definitions/Group_for_post'
                required:
                        - name
                        - description
                        - members  
  Group_in_put:
        name: group
        description: the object group
        in: body
        schema:
                $ref: '#/definitions/Group_for_post'

  Group_id_in_path:
    name: group_id
    description: the id of a group
    in: path
    type: integer
    required: true    
    
  Exam_submission_in_post:
        name: exam_submission
        description: the object exam_submission
        in: body
        schema:
                $ref: '#/definitions/Exam_submission_for_post'
                required:
                        - referred_exam_id
                        #- submitter
                        - answers
                        - status    
          
  Exam_submission_in_put:
        name: exam_submission
        description: the object exam_submission
        in: body
        schema:
                $ref: '#/definitions/Exam_submission_for_put'
                        
  Exam_submission_id_in_path:
    name: exam_submission_id
    description: exam submission id
    in: path
    type: integer
    required: true  

  Exam_peer_review_in_post:
        name: exam_peer_review
        description: the object exam peer review
        in: body
        schema:
                $ref: '#/definitions/Exam_peer_review_for_post'
                required:
                        - review  
                        
  Exam_peer_review_in_put:
        name: exam_peer_review
        description: the object exam peer review
        in: body
        schema:
                $ref: '#/definitions/Exam_peer_review_for_put'
                required:
                        - exam_peer_review_id

  Exam_peer_review_id_in_path:
    name: exam_peer_review_id
    description: exam peer review id
    in: path
    type: integer
    required: true


  Exam_assessment_post:
        name: exam_assessment
        description: the object exam_assessment
        in: body
        schema:
                $ref: '#/definitions/Exam_assessment'
                required:
                        - assigner
                        - assignee
                        - referred_exam
                        - submitted_exam
                        - assessment

  Exam_assessment_put:
        name: exam_assessment
        description: the object exam_assessment
        in: body
        schema:
                $ref: '#/definitions/Exam_assessment'
                required:
                        - exam_assessment_id

  Exam_assessment_id_in_path:
    name: exam_assessment_id
    description: exam assessment id
    in: path
    type: integer
    required: true


    

    
    
responses:
  Unknown_error:
    description: unhandled error
    schema:
      $ref: '#/definitions/Error'
  
  
  200_ok_only:
        description: Created  
  
  201_created:
        description: Created
  
  204_no_content:
        description: No Content
  
  400_bad_request:
          description: Bad Request
          schema:
                $ref: '#/definitions/Error'
                
  401_unauthorized:
          description: Unauthorized, missing or invalid API Key
          schema:
                $ref: '#/definitions/Error'
                
  404_not_found:
          description: Not Found
          schema:
                 $ref: '#/definitions/Error'
 
  405_method_not_allowed:
          description: Method Not Allowed
          schema:
                 $ref: '#/definitions/Error'
  
  409_conflict:
          description: Conflict
          schema:
                 $ref: '#/definitions/Error'
  
    
  
  500_internal_server_error:
          description: Internal Server Error
          schema:
                $ref: '#/definitions/Error'
         
         
#definisce apikey      
securityDefinitions:
        Api_key_student:
                type: apiKey
                in: query
                name: api_key
        Api_key_teacher:
                type: apiKey
                in: query
                name: api_key