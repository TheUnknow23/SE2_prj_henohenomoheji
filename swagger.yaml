swagger: '2.0'
info:
  version: 0.0.1
  title: Henohenoapi
  description: >-
    The project aims to create a platform for managing exams, teachers can
    public exams(which have a deadline) and add tasks to them, while students
    can submit their answers and answer.
#dominio e baseroot
host: henoheno-app.herokuapp.com
basePath: /
#portocollo supportato
schemes:
  - http
#formati dati accettabile da server
consumes:
  - application/json
#formati dati prodotto da server
produces:
  - application/json
tags:
  - name: Users_resource
    description: Operations regarding the users
  - name: Exams_resource
    description: Operations regarding the exam
  - name: Tasks_resource
    description: Operations regarding the tasks
  - name: Answer_resource
    description: Operations regarding the answer
  - name: Groups_resource
    description: Operations regarding the students
  - name: Marks_resource
    description: Operations regarding the marks
  - name: Reviews_resource
    description: Operations regarding the reviews

#sicurezza defualt per tutte le operazioni
security:
  - ApiKeyStudent: []     #api di studente
  - ApiKeyTeacher: []     #api di insegnante



#parte di url--------------------------------------------------------------------------
paths:
  /auth:
    post:
      summary: user authentication
      description: XXXXXXXXXXXX #da scrivere
      tags:
        - Users_resource
      parameters:
        - $ref: '#/parameters/User_email_password_in_body'

      responses:
        '201':
                description: return a user 's token
                schema:
                        type: string
                        description: a valid token               
                
        '500':
                $ref: '#/responses/500_internal_server_error'               
                        
          
  /users:
    get:
      summary: users list
      description: XXXXXXXXXXXX
      tags:
        - Users_resource
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Users'
              
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    post:
      summary: user subscription
      description: XXXXXXXXXXXX
      tags:
        - Users_resource
      parameters:
        - $ref: '#/parameters/User_in_body'
      responses:
        '201':
                description: Created
                schema:
                        type: integer
                        description: the new user 's id
                        
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '500':
                $ref: '#/responses/500_internal_server_error'
                
  '/users/{user_id}':
    get:
      summary: access one specific user
      description: XXXXXXXXXXXX
      tags:
        - Users_resource
      parameters:
        - $ref: '#/parameters/User_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'

        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
  '/users/{user_id}/exams':
    get:
      summary: get the exams assigned to a student
      description: XXXXXXXXXXXX
      tags:
        - Users_resource
      parameters:
        - $ref: '#/parameters/User_id_in_path'
      responses:
                '200':
                        $ref: '#/responses/200_ok_only'
                '404':
                        $ref: '#/responses/404_not_found'
                '500':
                        $ref: '#/responses/500_internal_server_error'
        
  '/users/{user_id}/marks':
    get:
      summary: get the marks assigned to a student
      description: XXXXXXXXXXXX
      tags:
        - Users_resource
      parameters:
        - $ref: '#/parameters/User_id_in_path'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
          
  /exams:
    get:
      summary: exams list
      description: XXXXXXXXXXXX
      tags:
        - Exams_resource
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Exam'
          
            
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    post:
      summary: create an exam by defining a set of tasks and other stuff
      description: XXXXXXXXXXXX
      tags:
        - Exams_resource
      responses:
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '500':
                $ref: '#/responses/500_internal_server_error'
  '/exams/{exam_id}':
    get:
      summary: access one specific exam
      description: XXXXXXXXXXXX
      tags:
        - Exams_resource
      parameters:
        - $ref: '#/parameters/Exam_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Exam'
          
            
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    put:
      summary: update an exam by adding groups or changing specific fields
      description: XXXXXXXXXXXX
      tags:
        - Exams_resource
      parameters:
        - $ref: '#/parameters/Exam_id_in_path'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '404':
                $ref: '#/responses/404_not_found'
        '409':
                $ref: '#/responses/409_conflict'
        '500':
                $ref: '#/responses/500_internal_server_error'
  '/exams/{exam_id}/answer':
    get:
      summary: access the answer of a specific exam
      description: XXXXXXXXXXXX
      tags:
        - Exams_resource
      parameters:
        - $ref: '#/parameters/Exam_id_in_path'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
  '/exams/{exam_id}/tasks':
    get:
      summary: access the tasks of a specific exam
      description: XXXXXXXXXXXX
      tags:
        - Exams_resource
      parameters:
        - $ref: '#/parameters/Exam_id_in_path'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
          
  /tasks:
    get:
      summary: tasks list
      description: XXXXXXXXXXXX
      tags:
        - Tasks_resource
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
          
            
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    post:
      summary: create new task
      description: XXXXXXXXXXXX
      tags:
        - Tasks_resource
      responses:
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '500':
                $ref: '#/responses/500_internal_server_error'
  '/tasks/{task_id}':
    get:
      summary: access one specific task
      description: XXXXXXXXXXXX
      tags:
        - Tasks_resource
      parameters:
        - $ref: '#/parameters/Task_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
          
            
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    put:
      summary: update an existing task
      description: XXXXXXXXXXXX
      tags:
        - Tasks_resource
      parameters:
        - $ref: '#/parameters/Task_id_in_path'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '404':
                $ref: '#/responses/404_not_found'
        '409':
                $ref: '#/responses/409_conflict'
        '500':
                $ref: '#/responses/500_internal_server_error'
    delete:
      summary: delete an existing task
      description: XXXXXXXXXXXX
      tags:
        - Tasks_resource
      parameters:
        - $ref: '#/parameters/Task_id_in_path'
      responses:
        '204':
                $ref: '#/responses/204_no_content'
        '404':
                $ref: '#/responses/404_not_found'
        '405':
                $ref: '#/responses/405_method_not_allowed'
        '500':
                $ref: '#/responses/500_internal_server_error'
          
  /answer:
    get:
      summary: Answer list
      description: XXXXXXXXXXXX
      tags:
        - Answer_resource
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Answer'
          
            
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    post:
      summary: submit new answer
      description: XXXXXXXXXXXX
      tags:
        - Answer_resource
      responses:
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '500':
                $ref: '#/responses/500_internal_server_error'

  '/answer/{answer_id}':
    get:
      summary: access a specific answer
      description: XXXXXXXXXXXX
      tags:
        - Answer_resource
      parameters:
        - $ref: '#/parameters/Answer_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Answer'
          
            
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'
        
          
    put:
      summary: update an existing solution
      description: XXXXXXXXXXXX
      tags:
        - Answer_resource
      parameters:
        - $ref: '#/parameters/Answer_id_in_path'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '404':
                $ref: '#/responses/404_not_found'
        '409':
                $ref: '#/responses/409_conflict'
        '500':
                $ref: '#/responses/500_internal_server_error'
  '/answer/{answer_id}/reviews':
    get:
      summary: access the reviews of a solution
      description: XXXXXXXXXXXX
      tags:
        - Answer_resource
      parameters:
        - $ref: '#/parameters/Answer_id_in_path'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Review'
          
            
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

        
          
    post:
      summary: submit a review to an answer
      description: XXXXXXXXXXXX
      tags:
        - Answer_resource
      parameters:
        - $ref: '#/parameters/Answer_id_in_path'
      responses:
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '500':
                $ref: '#/responses/500_internal_server_error'

          
  /groups:
    get:
      summary: groups list
      description: XXXXXXXXXXXX
      tags:
        - Groups_resource
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
          examples:
            application/json:
              - group_id: 88
                group_name: henohenomoheji
                group_members: [9, 91, 19]
              - group_id: 89
                group_name: apicoltori
                group_members: [9, 91, 19]
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

        
          
    post:
      summary: create new group
      description: XXXXXXXXXXXX
      tags:
        - Groups_resource
      responses:
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '500':
                $ref: '#/responses/500_internal_server_error'

  '/groups/{group_id}':
    get:
      summary: see the members of a group
      description: XXXXXXXXXXXX
      tags:
        - Groups_resource
      parameters:
        - $ref: '#/parameters/Group_id_in_path'
      responses:
        '200':
          description: positive answer
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

        
          
    put:
      summary: update an existing group
      description: XXXXXXXXXXXX
      tags:
        - Groups_resource
      parameters:
        - $ref: '#/parameters/Group_id_in_path'
      responses:
        '200':
                $ref: '#/responses/200_ok_only'
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '404':
                $ref: '#/responses/404_not_found'
        '409':
                $ref: '#/responses/409_conflict'
        '500':
                $ref: '#/responses/500_internal_server_error'

          
  /marks:
    get:
      summary: marks list
      description: XXXXXXXXXXXX
      tags:
        - Marks_resource
      responses:
        '200':
          description: positive answer
          schema:
            type: array
            items:
              $ref: '#/definitions/Mark'
          examples:
            application/json:
              - mark_id: 88
                student_id: 100
                teache_id: 23
              - group_id: 89
                group_name: 99
                group_members: 12
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

        
          
    post:
      summary: add new mark
      description: XXXXXXXXXXXX
      tags:
        - Marks_resource
      responses:
        '201':
                $ref: '#/responses/201_created'
        '204':
                $ref: '#/responses/204_no_content'
        '400':
                $ref: '#/responses/400_bad_request'
        '500':
                $ref: '#/responses/500_internal_server_error'

          
  /reviews:
    get:
      summary: reviews list
      description: XXXXXXXXXXXX
      tags:
        - Reviews_resource
      responses:
        '200':
          description: positive answer
          schema:
            type: array
            items:
              $ref: '#/definitions/Review'
          examples:
            application/json:
              - task_id: 88
                student_id: 100
                solution_id: 23
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

        
          
  '/reviews/{review_id}':
    get:
      summary: read a specific review
      description: XXXXXXXXXXXX
      tags:
        - Reviews_resource
      parameters:
        - $ref: '#/parameters/Review_id_in_path'
      responses:
        '200':
          description: positive answer
          schema:
            type: array
            items:
              $ref: '#/definitions/Review'
          examples:
            application/json:
              - task_id: 88
                student_id: 100
                solution_id: 23
        '404':
                $ref: '#/responses/404_not_found'
        '500':
                $ref: '#/responses/500_internal_server_error'

        
          
          
#parte di costante --------------------------------------------------------------------------
definitions:
  Error:
    properties:
      code:
        type: integer
      message:
        type: string
  
  #oggetto utente
  User:
    type: object
    properties:
      user_id:
        type: integer
        description: the user 's id
      email:
        type: string
        description: the user 's email
      password:
        type: string
        format: password
        description: the user 's password
      name:
        type: string
        description: the user 's name
      surname:
        type: string
        description: the user 's surname
 
  Users:
        type: array
        items: 
                $ref: '#/definitions/User'
  
  Exam:
    type: object
    properties:
      exam_id:
        type: integer
      owner:
        type: string
      title:
        type: string
      description:
        type: string
      task_set:
        type: array
        items:
          $ref: '#/definitions/Task'
      group:
        $ref: '#/definitions/Group'
      final_deadline:
        type: string
        format: date
      reviews_deadline:
        type: string
        format: date

  Exams:
        type: array
        items: 
                $ref: '#/definitions/Exam'
  
  
  Task:
    type: object
    properties:
      task_id:
        type: integer
      owner:
        type: string
      task_type:
        type: string
      subject:
        type: string
      title:
        type: string
      description:
        type: string
      options:
        type: array
        items: 
          type: string
      solutions:
        type: array
        items: 
          type: string

  Tasks:
        type: array
        items: 
                $ref: '#/definitions/Task'
  
  Group:
    type: object
    properties:
      group_id:
        type: integer
      name:
        type: string
      description:
        type: string
      members:
        type: array
        items:
          $ref: '#/definitions/User'

  Groups:
        type: array
        items: 
                $ref: '#/definitions/Group'
  
  Exam_submission:
    type: object
    properties:
      exam_submission_id:
        type: integer
      referred_exam:
        $ref: '#/definitions/Exam'
      submitter:
        $ref: '#/definitions/User'
      answers:
        type: array
        items:
          type: object
          properties:
            task_name: #task_name? referred_task object?
              type: string
            value:
              type: string
      status:
        type: string

      
  Exam_peer_review:
    type: object
    properties:
      exam_peer_review_id:
        type: integer
      reviewer:
        $ref: '#/definitions/User'
      submitted_exam:
        $ref: '#/definitions/Exam_submission'
      review:
        type: string

      
  Exam_assessment:
    type: object
    properties:
      exam_assessment_id:
        type: integer
      assigner:
        $ref: '#/definitions/User'
      assignee:
        $ref: '#/definitions/User'
      referred_exam:
        $ref: '#/definitions/Exam'
      submitted_exam:
        $ref: '#/definitions/Exam_submission'
      assessment:
        type: string

  
  #NO MORE NEEDED----------------------------------    
  Answer:
    type: object
    properties:
      aswer_id:
        type: integer
      task_id:
        type: integer
      author_id:
        type: integer
 
  
  Mark:
    type: object
    properties:
      mark_id:
        type: integer
      student_id:
        type: integer
      teacher_id:
        type: integer

  
  Review:
    type: object
    properties:
      review_id:
        type: integer
      student_id:
        type: integer
      task_id:
        type: integer
    required:
      - review_id
#/NO MORE NEEDED----------------------------------


parameters:
        
  User_in_body:        
        name: user
        description: the object user
        in: body
        schema:
                $ref: '#/definitions/User'

  User_email_password_in_body:  
        name: email_and_password
        description: the user s' email and password
        in: body
        schema:
                type: object
                properties:
                        email:
                                type: string
                                description: the user s' email
                        password:
                                type: string
                                format: password     
                                description: the user s' password
                required: 
                        - email
                        - password
           
        
  User_id_in_path:
    name: user_id
    description: the user's id
    in: path
    type: integer
    required: true
    
  
    
  Exam_id_in_path:
    name: exam_id
    description: id esame
    in: path
    type: integer
    required: true
  Task_id_in_path:
    name: task_id
    description: id task
    in: path
    type: integer
    required: true
  Answer_id_in_path:
    name: answer_id
    description: answer id
    in: path
    type: integer
    required: true
  Group_id_in_path:
    name: group_id
    description: the id of a group
    in: path
    type: integer
    required: true
  Mark_id_in_path:
    name: mark_id
    description: the id of a mark
    in: path
    type: integer
    required: true
  Review_id_in_path:
    name: review_id
    description: the id of the review
    in: path
    type: integer
    required: true
    
    
responses:
  Unknown_error:
    description: unhandled error
    schema:
      $ref: '#/definitions/Error'
  
  
  200_ok_only:
        description: Created  
  
  201_created:
        description: Created
  
  204_no_content:
        description: No Content
  
  400_bad_request:
          description: Bad Request
          schema:
                $ref: '#/definitions/Error'
                
  401_unauthorized:
          description: Unauthorized, missing or invalid API Key
          schema:
                $ref: '#/definitions/Error'
                
  404_not_found:
          description: Not Found
          schema:
                 $ref: '#/definitions/Error'
 
  405_method_not_allowed:
          description: Method Not Allowed
          schema:
                 $ref: '#/definitions/Error'
  
  409_conflict:
          description: Conflict
          schema:
                 $ref: '#/definitions/Error'
  
    
  
  500_internal_server_error:
          description: Internal Server Error
          schema:
                $ref: '#/definitions/Error'
         
         
#definisce apikey      
securityDefinitions:
        ApiKeyStudent:
                type: apiKey
                in: query
                name: api_key
        ApiKeyTeacher:
                type: apiKey
                in: query
                name: api_key